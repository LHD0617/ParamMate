<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\MM32SPIN2PS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\MM32SPIN2PS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Aug 12 16:43:32 2022
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Window_init &rArr; PM_CreateWaveform &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[12]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1a]">ADC2_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1e]">COMP1_2_3_4_5_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from isr.o(i.DMA1_Channel1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from isr.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from isr.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from isr.o(i.EXTI0_1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from isr.o(i.EXTI2_3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from isr.o(i.EXTI4_15_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[e]">HWDIV_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from common.o(i.HardFault_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from common.o(i.NMI_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[8]">PWM_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from common.o(i.PendSV_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[20]">SPI2_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from common.o(i.SVC_Handler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_mm32spin2xx_p.o(i.SystemInit) referenced from startup_mm32spin2xx_p_keil.o(.text)
 <LI><a href="#[19]">TIM14_IRQHandler</a> from isr.o(i.TIM14_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from isr.o(i.TIM16_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from isr.o(i.TIM17_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from isr.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from isr.o(i.TIM2_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from isr.o(i.TIM3_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[17]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from isr.o(i.TIM8_BRK_UP_TRG_COM_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[18]">TIM8_CC_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[21]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[22]">UART2_IRQHandler</a> from isr.o(i.UART2_IRQHandler) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_mm32spin2xx_p_keil.o(.text) referenced from startup_mm32spin2xx_p_keil.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32spin2xx_p_keil.o(.text)
 <LI><a href="#[23]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[26]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[38]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[79]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[7d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>COMP1_2_3_4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin2xx_p_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendWaveformData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendParamData
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveformChannels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveform
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParamChannels
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParam
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateImage
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[83]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[84]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[85]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[87]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[30]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32spin2xx_p.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, isr.o(i.DMA1_Channel4_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_dma
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_dma
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_dma
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, isr.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, isr.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, isr.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI4_15_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_vsync
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_uart_vsync
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_vsync
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[3f]"></a>EXTI_GetITStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>PM_CreateImage</STRONG> (Thumb, 92 bytes, Stack size 72 bytes, parammate.o(i.PM_CreateImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PM_CreateImage &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_Strcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[49]"></a>PM_CreateParam</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, parammate.o(i.PM_CreateParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PM_CreateParam &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_Strcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4a]"></a>PM_CreateParamChannels</STRONG> (Thumb, 88 bytes, Stack size 72 bytes, parammate.o(i.PM_CreateParamChannels))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PM_CreateParamChannels &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_Strcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4b]"></a>PM_CreateWaveform</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, parammate.o(i.PM_CreateWaveform))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = PM_CreateWaveform &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_Strcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4c]"></a>PM_CreateWaveformChannels</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, parammate.o(i.PM_CreateWaveformChannels))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PM_CreateWaveformChannels &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_Strcpy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4d]"></a>PM_InitWindow</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, parammate.o(i.PM_InitWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PM_InitWindow &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4e]"></a>PM_ResetWindow</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, parammate.o(i.PM_ResetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = PM_ResetWindow &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>

<P><STRONG><a name="[4f]"></a>PM_SendBinImage</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, pm_commprot.o(i.PM_SendBinImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PM_SendBinImage &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_TranSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendImageData
</UL>

<P><STRONG><a name="[52]"></a>PM_SendImageData</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, parammate.o(i.PM_SendImageData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PM_SendImageData &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendBinImage
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>PM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, pm_commprot.o(i.PM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendPackect
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendWaveformData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendParamData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendImageData
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_ResetWindow
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_InitWindow
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveformChannels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveform
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParamChannels
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParam
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateImage
</UL>

<P><STRONG><a name="[53]"></a>PM_SendPackect</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pm_commprot.o(i.PM_SendPackect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_TranSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
</UL>

<P><STRONG><a name="[54]"></a>PM_SendParamData</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, parammate.o(i.PM_SendParamData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PM_SendParamData &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>PM_SendWaveformData</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, parammate.o(i.PM_SendWaveformData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PM_SendWaveformData &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendMessage
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>PM_Strcpy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, parammate.o(i.PM_Strcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PM_Strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveformChannels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveform
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParamChannels
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParam
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateImage
</UL>

<P><STRONG><a name="[51]"></a>PM_TranSendByte</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, pm_commprot.o(i.PM_TranSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendPackect
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendBinImage
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, common.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>TIM14_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM14_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM16_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM17_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, isr.o(i.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, isr.o(i.TIM8_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART1_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, isr.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART2_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, isr.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ov7725_cof_uart_interrupt
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin2xx_p_keil.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>Window_init</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, main.o(i.Window_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Window_init &rArr; PM_CreateWaveform &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_ResetWindow
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_InitWindow
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveformChannels
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveform
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParamChannels
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParam
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateImage
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[89]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[66]"></a>adc_convert</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, zf_adc.o(i.adc_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>adc_init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, zf_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = adc_init &rArr; adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>afio_init</STRONG> (Thumb, 206 bytes, Stack size 36 bytes, zf_gpio.o(i.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
</UL>

<P><STRONG><a name="[5f]"></a>board_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, board.o(i.board_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = board_init &rArr; uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendWaveformData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendParamData
</UL>

<P><STRONG><a name="[61]"></a>get_accdata</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, seekfree_mpu6050.o(i.get_accdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = get_accdata &rArr; simiic_read_regs &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>get_gyro</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, seekfree_mpu6050.o(i.get_gyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = get_gyro &rArr; simiic_read_regs &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>gpio_dir</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, zf_gpio.o(i.gpio_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_waitack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>

<P><STRONG><a name="[5e]"></a>gpio_init</STRONG> (Thumb, 190 bytes, Stack size 36 bytes, zf_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_pin_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_init
</UL>

<P><STRONG><a name="[65]"></a>gpio_toggle</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zf_gpio.o(i.gpio_toggle))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; Window_init &rArr; PM_CreateWaveform &rArr; PM_SendMessage &rArr; PM_SendPackect &rArr; PM_TranSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_toggle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gyro
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accdata
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendWaveformData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendParamData
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendImageData
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Window_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[46]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendWaveformData
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendParamData
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateWaveform
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateParam
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_CreateImage
</UL>

<P><STRONG><a name="[64]"></a>mpu6050_init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, seekfree_mpu6050.o(i.mpu6050_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mpu6050_init &rArr; mpu6050_self1_check &rArr; simiic_read_reg &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self1_check
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>mpu6050_self1_check</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, seekfree_mpu6050.o(i.mpu6050_self1_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = mpu6050_self1_check &rArr; simiic_read_reg &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>

<P><STRONG><a name="[3e]"></a>mt9v03x_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>mt9v03x_uart_callback</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_uart_callback))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[43]"></a>mt9v03x_vsync</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_mt9v03x.o(i.mt9v03x_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>ov7725_cof_uart_interrupt</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_cof_uart_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>ov7725_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[3d]"></a>ov7725_uart_dma</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_dma))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[42]"></a>ov7725_uart_vsync</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_uart_7725.o(i.ov7725_uart_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>ov7725_vsync</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, seekfree_7725.o(i.ov7725_vsync))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>simiic_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, seekfree_iic.o(i.simiic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = simiic_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>

<P><STRONG><a name="[6c]"></a>simiic_read_reg</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, seekfree_iic.o(i.simiic_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = simiic_read_reg &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self1_check
</UL>

<P><STRONG><a name="[62]"></a>simiic_read_regs</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, seekfree_iic.o(i.simiic_read_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = simiic_read_regs &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gyro
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_accdata
</UL>

<P><STRONG><a name="[6b]"></a>simiic_write_reg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, seekfree_iic.o(i.simiic_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = simiic_write_reg &rArr; send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_self1_check
</UL>

<P><STRONG><a name="[75]"></a>systick_delay</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_systick.o(i.systick_delay))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay_ms
</UL>

<P><STRONG><a name="[68]"></a>systick_delay_ms</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, zf_systick.o(i.systick_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = systick_delay_ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_delay
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>uart_init</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, zf_uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = uart_init &rArr; uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_pin_init
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[50]"></a>uart_putchar</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_uart.o(i.uart_putchar))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_TranSendByte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendPackect
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PM_SendBinImage
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[57]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32spin2xx_p.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[58]"></a>SetSysClockToXX</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, system_mm32spin2xx_p.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[5d]"></a>adc_pin_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, zf_adc.o(i.adc_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = adc_pin_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>

<P><STRONG><a name="[76]"></a>uart_pin_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, zf_uart.o(i.uart_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart_pin_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[6d]"></a>read_ch</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, seekfree_iic.o(i.read_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = read_ch &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_sendack
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[71]"></a>sccb_waitack</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, seekfree_iic.o(i.sccb_waitack))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_dir
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
</UL>

<P><STRONG><a name="[72]"></a>send_ch</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, seekfree_iic.o(i.send_ch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = send_ch &rArr; sccb_waitack &rArr; gpio_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_waitack
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[6e]"></a>simiic_delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, seekfree_iic.o(i.simiic_delay))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_stop
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_start
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_sendack
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ch
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sccb_waitack
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>

<P><STRONG><a name="[70]"></a>simiic_sendack</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, seekfree_iic.o(i.simiic_sendack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = simiic_sendack
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_ch
</UL>

<P><STRONG><a name="[73]"></a>simiic_start</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, seekfree_iic.o(i.simiic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = simiic_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>

<P><STRONG><a name="[74]"></a>simiic_stop</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, seekfree_iic.o(i.simiic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = simiic_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_write_reg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_regs
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simiic_read_reg
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
